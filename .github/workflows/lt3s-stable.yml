# 🔖 R3C Autonomous Stable Release v7 (3OS + Windows Fix + Integrity)
# Rust-LT3S | Ubuntu / macOS / Windows 완전 대응 버전

name: 🔖 R3C Autonomous Stable Release v7 (3OS + Integrity)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
  schedule:
    - cron: "0 0 * * *"  # 매일 자정 UTC
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: stable-release
  cancel-in-progress: false

jobs:
  build-and-release:
    name: "3OS Build + Release"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      TAG: v${{ github.run_number }}-${{ matrix.os }}-lt3s

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🦀 Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 🧱 Build Rust-LT3S
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p build
          cargo build --release
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp target/release/*.exe build/rust-lt3s.exe
          else
            cp target/release/rust-lt3s build/rust-lt3s
          fi

      - name: 📦 Package artifacts
        shell: bash
        run: |
          set -euo pipefail
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            zip -j rust-lt3s-windows-latest.zip build/rust-lt3s.exe
            sha256sum rust-lt3s-windows-latest.zip > rust-lt3s-windows-latest.sha256
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            zip -j rust-lt3s-macos-latest.zip build/rust-lt3s
            sha256sum rust-lt3s-macos-latest.zip > rust-lt3s-macos-latest.sha256
          else
            zip -j rust-lt3s-ubuntu-latest.zip build/rust-lt3s
            sha256sum rust-lt3s-ubuntu-latest.zip > rust-lt3s-ubuntu-latest.sha256
          fi

      - name: 🚀 Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          files: |
            *.zip
            *.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
